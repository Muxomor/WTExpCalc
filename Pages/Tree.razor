@* Tree.razor (без изменений маршрутизации) *@
@page "/tree/{NationId:int}"
@using WTExpCalc.Models
@using WTExpCalc.Services
@using WTExpCalc.Shared
@inject IExperienceApi Api

<h3>Ветка прокачки для нации @FormatNationName(currentNation?.Name)</h3>
@if (vehicleTypes == null)
{
    <p><em>Загрузка типов…</em></p>
}
else
{
    <ul class="nav nav-tabs">
        @foreach (var vt in vehicleTypes)
        {
            <li class="nav-item">
                <a class="nav-link @(vt.Id == activeTypeId ? "active" : "")"
                   href="#"
                   @onclick="() => SelectType(vt.Id)"
                @onclick:preventDefault>
                    @vt.Name
                </a>
            </li>
        }
    </ul>

    <div class="tab-content mt-3">
        @if (activeTypeId != null)
        {
            <TechTree NationId="NationId" TypeId="activeTypeId.Value" />
        }
    </div>
}

@code {
    [Parameter] public int NationId { get; set; }
    private List<VehicleType>? vehicleTypes;
    private int? activeTypeId;
    private Nation? currentNation; // Переменная для хранения данных о нации

    protected override async Task OnParametersSetAsync() // Используем OnParametersSetAsync, чтобы реагировать на изменение NationId
    {
        // Сбрасываем состояние при смене параметра
        vehicleTypes = null;
        currentNation = null;
        activeTypeId = null;
        StateHasChanged(); // Показать индикатор загрузки

        vehicleTypes = await Api.GetVehicleTypesAsync();
        currentNation = await Api.GetNationByIdAsync(NationId); // Загружаем данные о нации

        if (vehicleTypes != null && vehicleTypes.Any())
        {
            activeTypeId = vehicleTypes.First().Id; // Устанавливаем первую вкладку активной
        }
        StateHasChanged(); // Обновить UI с загруженными данными
    }

    void SelectType(int id)
    {
        activeTypeId = id;
        // StateHasChanged() здесь обычно не нужен, Blazor сам отследит изменение
    }

    // Вспомогательный метод для форматирования имени нации
    private string FormatNationName(string? name)
    {
        if (string.IsNullOrEmpty(name))
            return $"ID: {NationId}"; // Возвращаем ID, если имя не загрузилось
        if (name.Length == 1)
            return name.ToUpper();
        return char.ToUpper(name[0]) + name.Substring(1);
    }
}